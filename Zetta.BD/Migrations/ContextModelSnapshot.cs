// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Zetta.BD.DATA;

#nullable disable

namespace Zetta.BD.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Zetta.BD.DATA.ENTITY.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Localidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Zetta.BD.DATA.ENTITY.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ObraId")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ObraId");

                    b.ToTable("Comentario");
                });

            modelBuilder.Entity("Zetta.BD.DATA.ENTITY.ItemPresupuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fabricante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechActuPrecio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Material")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medida")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Precio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Rubro")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ItemPresupuestos");
                });

            modelBuilder.Entity("Zetta.BD.DATA.ENTITY.Obra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EstadoObra")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ObraId")
                        .HasColumnType("int");

                    b.Property<int>("PresupuestoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ObraId");

                    b.HasIndex("PresupuestoId");

                    b.ToTable("Obras");
                });

            modelBuilder.Entity("Zetta.BD.DATA.ENTITY.PresItemDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("ItemPresupuestoId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PresupuestoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemPresupuestoId");

                    b.HasIndex("PresupuestoId");

                    b.ToTable("PresItemDetalles");
                });

            modelBuilder.Entity("Zetta.BD.DATA.ENTITY.Presupuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aceptado")
                        .HasColumnType("bit");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ManodeObra")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OpcionDePago")
                        .HasColumnType("int");

                    b.Property<int>("Rubro")
                        .HasColumnType("int");

                    b.Property<string>("TiempoAproxObra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalP")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ValidacionDias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Presupuestos");
                });

            modelBuilder.Entity("Zetta.BD.DATA.ENTITY.Comentario", b =>
                {
                    b.HasOne("Zetta.BD.DATA.ENTITY.Obra", null)
                        .WithMany("Comentarios")
                        .HasForeignKey("ObraId");
                });

            modelBuilder.Entity("Zetta.BD.DATA.ENTITY.Obra", b =>
                {
                    b.HasOne("Zetta.BD.DATA.ENTITY.Obra", null)
                        .WithMany("Obras")
                        .HasForeignKey("ObraId");

                    b.HasOne("Zetta.BD.DATA.ENTITY.Presupuesto", "Presupuesto")
                        .WithMany()
                        .HasForeignKey("PresupuestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Presupuesto");
                });

            modelBuilder.Entity("Zetta.BD.DATA.ENTITY.PresItemDetalle", b =>
                {
                    b.HasOne("Zetta.BD.DATA.ENTITY.ItemPresupuesto", "ItemPresupuesto")
                        .WithMany()
                        .HasForeignKey("ItemPresupuestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zetta.BD.DATA.ENTITY.Presupuesto", "Presupuesto")
                        .WithMany("ItemsDetalle")
                        .HasForeignKey("PresupuestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemPresupuesto");

                    b.Navigation("Presupuesto");
                });

            modelBuilder.Entity("Zetta.BD.DATA.ENTITY.Presupuesto", b =>
                {
                    b.HasOne("Zetta.BD.DATA.ENTITY.Cliente", null)
                        .WithMany("Presupuestos")
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("Zetta.BD.DATA.ENTITY.Cliente", b =>
                {
                    b.Navigation("Presupuestos");
                });

            modelBuilder.Entity("Zetta.BD.DATA.ENTITY.Obra", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Obras");
                });

            modelBuilder.Entity("Zetta.BD.DATA.ENTITY.Presupuesto", b =>
                {
                    b.Navigation("ItemsDetalle");
                });
#pragma warning restore 612, 618
        }
    }
}
